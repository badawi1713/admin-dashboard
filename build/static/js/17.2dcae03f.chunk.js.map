{"version":3,"sources":["views/Customer/Customers.js"],"names":["override","css","CustomerRow","props","index","number","customer","customerLink","id","key","toString","name","email","contact_number","identity_number","sub_district","province","to","pathname","customer_data","token","localStorage","getItem","Customers","headers","label","componentDidMount","a","getCustomersData","getCustomerPaginationData","getCustomerSearchData","handleSearchInput","e","preventDefault","searchQuery","target","value","setState","isSearchLoading","Axios","get","SECRET","response","customerSearchData","data","console","log","isLoading","status","removeItem","history","push","currentPage","limit","state","customerPaginationData","rows","totalPages","count","customerData","onSearch","this","className","size","color","loading","style","display","alignItems","justifyContent","length","filename","type","placeholder","width","padding","onChange","trim","test","striped","responsive","hover","scope","map","activePage","totalItemsCount","itemsCountPerPage","itemClass","linkClass","Component"],"mappings":"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","file":"static/js/17.2dcae03f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\nimport Pagination from \"react-js-pagination\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table,\n} from \"reactstrap\";\nimport Axios from \"axios\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { css } from \"@emotion/core\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: #20a8d8;\n`;\n\nfunction CustomerRow(props) {\n  const index = props.number;\n  const customer = props.customer;\n  const customerLink = `/admin/customers/${customer.id}`;\n\n  return (\n    <tr key={customer.id.toString()}>\n      <td>{index}</td>\n      <td>{customer.name}</td>\n      <td>{customer.email}</td>\n      <td>{customer.contact_number}</td>\n      <td>{customer.identity_number}</td>\n      <td>{customer.sub_district}</td>\n      <td>{customer.province}</td>\n\n      {/* <td>{customer.createdAt}</td> */}\n      <td>\n        <Link\n          to={{\n            pathname: customerLink,\n            customer_data: customer,\n            // createdAt: customer.createdAt,\n          }}\n        >\n          Detail\n        </Link>\n      </td>\n    </tr>\n  );\n}\n\nconst token = localStorage.getItem(\"KEY_TOKEN\");\nclass Customers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerData: [],\n      customerPaginationData: [],\n      isLoading: false,\n      isSearchLoading: false,\n      currentPage: 1,\n      totalPages: null,\n      limit: 50,\n      searchQuery: \"\",\n      customerSearchData: [],\n      onSearch: false,\n    };\n  }\n\n  headers = [\n    { label: \"Nama\", key: \"name\" },\n    { label: \"Alamat\", key: \"address\" },\n    { label: \"Email\", key: \"email\" },\n    { label: \"Nomor KTP\", key: \"identity_number\" },\n    { label: \"Nomor Telepon\", key: \"contact_number\" },\n    { label: \"Provinsi\", key: \"province\" },\n    { label: \"Kecamatan\", key: \"sub_district\" },\n    { label: \"Kelurahan\", key: \"urbanVillage\" },\n    { label: \"Kode Pos\", key: \"zip_code\" },\n    // { label: \"Tanggal daftar\", key: \"createdAt\" },\n  ];\n\n  componentDidMount = async () => {\n    await this.getCustomersData();\n    await this.getCustomerPaginationData();\n    await this.getCustomerSearchData();\n  };\n\n  handleSearchInput = (e) => {\n    e.preventDefault();\n    const searchQuery = e.target.value;\n    this.setState({ searchQuery: searchQuery });\n  };\n\n  getCustomerSearchData = async (searchQuery) => {\n    this.setState({ isSearchLoading: true });\n\n    try {\n      const response = await Axios.get(\n        `/api/v1/customer/search/customers?search=${searchQuery}`,\n        {\n          headers: {\n            token: token,\n            SECRET: \"secret\",\n          },\n        }\n      );\n      this.setState({ isSearchLoading: false });\n\n      this.setState({ customerSearchData: response.data.data });\n    } catch (error) {\n      console.log(error);\n      this.setState({ isLoading: false });\n      if (error.response.status === 401) {\n        localStorage.removeItem(\"KEY_TOKEN\");\n        this.props.history.push(\"/admin/unauthorized\");\n      }\n      this.setState({ isSearchLoading: false });\n    }\n  };\n\n  getCustomerPaginationData = async (currentPage = 1) => {\n    const { limit } = this.state;\n\n    try {\n      const response = await Axios.get(\n        `/api/v1/customer/customers?limit=${limit}&page=${currentPage}`,\n        {\n          headers: {\n            token: token,\n            SECRET: \"secret\",\n          },\n        }\n      );\n      this.setState({ customerPaginationData: response.data.data.rows });\n      this.setState({ totalPages: response.data.data.count });\n    } catch (error) {\n      console.log(error);\n      if (error.response.status === 401) {\n        localStorage.removeItem(\"KEY_TOKEN\");\n        this.props.history.push(\"/admin/unauthorized\");\n      }\n    }\n  };\n\n  getCustomersData = async () => {\n    this.setState({ isLoading: true });\n\n    try {\n      const response = await Axios.get(`/api/v1/customer/customer`, {\n        headers: {\n          token: token,\n          SECRET: \"secret\",\n        },\n      });\n      this.setState({ isLoading: false });\n      this.setState({ customerData: response.data.data });\n    } catch (error) {\n      console.log(error);\n      if (error.response.status === 401) {\n        localStorage.removeItem(\"KEY_TOKEN\");\n        this.props.history.push(\"/admin/unauthorized\");\n      }\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    const {\n      customerData,\n      customerPaginationData,\n      customerSearchData,\n      onSearch,\n    } = this.state;\n    const data = customerData;\n\n    return (\n      <div className=\"animated fadeIn\">\n        {this.state.isLoading ? (\n          <div className=\"text-center\">\n            {\" \"}\n            <ClipLoader\n              css={override}\n              size={20}\n              color={\"#20A8D8\"}\n              loading={this.state.isLoading}\n            />\n            Memuat Data ...\n          </div>\n        ) : (\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <b>Data Customer Terdaftar</b>\n                    {customerData.length < 1 ? null : (\n                      <div className=\"card-header-actions\">\n                        <CSVLink\n                          filename=\"data_customer_i-rural.csv\"\n                          data={data}\n                          headers={this.headers}\n                        >\n                          <Button className=\"btn\" color=\"primary\">\n                            <i className=\"fa fa-download\"></i>&nbsp;Unduh Data\n                            CSV\n                          </Button>\n                        </CSVLink>\n                      </div>\n                    )}\n                  </div>\n                </CardHeader>\n\n                <CardBody>\n                  <div className=\"mb-3\">\n                    <input\n                      type=\"text\"\n                      name=\"searchQuery\"\n                      placeholder=\"Pencarian\"\n                      style={{ width: \"100%\", padding: \"5px\" }}\n                      onChange={(e) => {\n                        const value = e.target.value.trim();\n                        if (/^\\s/.test(value) || value === \"\") {\n                          this.setState({ onSearch: false });\n                          return false;\n                        }\n                        this.setState({ onSearch: true });\n                        this.getCustomerSearchData(value.trim());\n                      }}\n                    />\n                  </div>\n                  {!onSearch ? (\n                    customerData.length < 1 ? (\n                      <p>Data Kosong</p>\n                    ) : (\n                      <div>\n                        <Table striped responsive hover>\n                          <thead>\n                            <tr>\n                              <th scope=\"col\">No</th>\n                              <th scope=\"col\">Nama</th>\n                              <th scope=\"col\">Email</th>\n                              <th scope=\"col\">Nomor Telepon</th>\n                              <th scope=\"col\">Nomor KTP</th>\n                              <th scope=\"col\">Kecamatan</th>\n                              <th scope=\"col\">Provinsi</th>\n\n                              {/* <th scope=\"col\">Tanggal Daftar</th> */}\n                              <th scope=\"col\">Aksi</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {customerPaginationData.map((customer, index) => (\n                              <CustomerRow\n                                number={index + 1}\n                                key={index}\n                                customer={customer}\n                              />\n                            ))}\n                          </tbody>\n                        </Table>\n                        <div>\n                          <Pagination\n                            activePage={this.state.currentPage}\n                            totalItemsCount={this.state.customerData.length}\n                            itemsCountPerPage={this.state.limit}\n                            onChange={(currentPage) => {\n                              this.setState({ currentPage: currentPage });\n                              this.getCustomerPaginationData(currentPage);\n                            }}\n                            itemClass=\"page-item\"\n                            linkClass=\"page-link\"\n                          />\n                        </div>\n                      </div>\n                    )\n                  ) : this.state.isSearchLoading ? (\n                    <div className=\"text-center\">\n                      {\" \"}\n                      <ClipLoader\n                        css={override}\n                        size={20}\n                        color={\"#20A8D8\"}\n                        loading={this.state.isLoading}\n                      />\n                      Mencari Data ...\n                    </div>\n                  ) : customerSearchData.length < 1 ? (\n                    <p>Data Tidak Ditemukan</p>\n                  ) : (\n                    <Table striped responsive hover>\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">No</th>\n                          <th scope=\"col\">Nama</th>\n                          <th scope=\"col\">Email</th>\n                          <th scope=\"col\">Nomor Telepon</th>\n                          <th scope=\"col\">Nomor KTP</th>\n                          <th scope=\"col\">Kelurahan</th>\n                          <th scope=\"col\">Provinsi</th>\n                          {/* <th scope=\"col\">Tanggal Daftar</th> */}\n                          <th scope=\"col\">Aksi</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {customerSearchData.map((customer, index) => (\n                          <CustomerRow\n                            number={index + 1}\n                            key={index}\n                            customer={customer}\n                          />\n                        ))}\n                      </tbody>\n                    </Table>\n                  )}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Customers;\n"],"sourceRoot":""}